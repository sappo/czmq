/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
*/

dependencies {
    compile 'org.scijava:native-lib-loader:2.3.4'
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
}

//  ------------------------------------------------------------------
//  Build section

task generateJniHeaders(type: Exec, dependsOn: 'classes') {
    def classpath = sourceSets.main.output.classesDirs
    def appclasspath = configurations.runtime.files*.getAbsolutePath().join(":")
    def nativeIncludes = "src/native/include"
    def jniClasses = [
            'src/main/java/org/zeromq/czmq/Zarmour.java',
            'src/main/java/org/zeromq/czmq/Zcert.java',
            'src/main/java/org/zeromq/czmq/Zcertstore.java',
            'src/main/java/org/zeromq/czmq/Zchunk.java',
            'src/main/java/org/zeromq/czmq/Zclock.java',
            'src/main/java/org/zeromq/czmq/Zconfig.java',
            'src/main/java/org/zeromq/czmq/Zdigest.java',
            'src/main/java/org/zeromq/czmq/Zdir.java',
            'src/main/java/org/zeromq/czmq/ZdirPatch.java',
            'src/main/java/org/zeromq/czmq/Zfile.java',
            'src/main/java/org/zeromq/czmq/Zframe.java',
            'src/main/java/org/zeromq/czmq/Zhash.java',
            'src/main/java/org/zeromq/czmq/Zhashx.java',
            'src/main/java/org/zeromq/czmq/Ziflist.java',
            'src/main/java/org/zeromq/czmq/Zlist.java',
            'src/main/java/org/zeromq/czmq/Zlistx.java',
            'src/main/java/org/zeromq/czmq/Zloop.java',
            'src/main/java/org/zeromq/czmq/Zmsg.java',
            'src/main/java/org/zeromq/czmq/Zpoller.java',
            'src/main/java/org/zeromq/czmq/Zproc.java',
            'src/main/java/org/zeromq/czmq/Zsock.java',
            'src/main/java/org/zeromq/czmq/Zstr.java',
            'src/main/java/org/zeromq/czmq/Zsys.java',
            'src/main/java/org/zeromq/czmq/Ztimerset.java',
            'src/main/java/org/zeromq/czmq/Ztrie.java',
            'src/main/java/org/zeromq/czmq/Zuuid.java',
            'src/main/java/org/zeromq/czmq/ZhttpClient.java',
            'src/main/java/org/zeromq/czmq/ZhttpServer.java',
            'src/main/java/org/zeromq/czmq/ZhttpServerOptions.java',
            'src/main/java/org/zeromq/czmq/ZhttpRequest.java',
            'src/main/java/org/zeromq/czmq/ZhttpResponse.java'
    ]
    def utilityClasses = [
            'src/main/java/org/zeromq/tools/ZmqNativeLoader.java'
    ]
    commandLine("javac", "-h", "$nativeIncludes", "-classpath", "$classpath:$appclasspath", *jniClasses, *utilityClasses)
}
tasks.withType(Test) {
    systemProperty "java.library.path", "/usr/lib:/usr/local/lib:$projectDir"
}
task initCMake(type: Exec, dependsOn: 'generateJniHeaders') {
    commandLine "cmake", "."
}
task buildNative(type: Exec, dependsOn: 'initCMake') {
    commandLine "make"
}

task copyLibs(type: Copy) {
    from "/usr/lib/libczmq.so", "/usr/local/lib/libczmq.so", "/tmp/lib/libczmq.so",
         "/usr/lib/libzmq.so", "/usr/local/lib/libzmq.so", "/tmp/lib/libzmq.so",
         "/usr/lib/uuid.so", "/usr/local/lib/uuid.so", "/tmp/lib/uuid.so",
         "/usr/lib/libsystemd.so", "/usr/local/lib/libsystemd.so", "/tmp/lib/libsystemd.so",
         "/usr/lib/liblz4.so", "/usr/local/lib/liblz4.so", "/tmp/lib/liblz4.so",
         "/usr/lib/libcurl.so", "/usr/local/lib/libcurl.so", "/tmp/lib/libcurl.so",
         "/usr/lib/libmicrohttpd.so", "/usr/local/lib/libmicrohttpd.so", "/tmp/lib/libmicrohttpd.so"
    into "."
}

jar.dependsOn buildNative
jar.dependsOn copyLibs
test.dependsOn buildNative

//  ------------------------------------------------------------------
//  Install and Publish section

task sourcesJar(type: Jar, dependsOn: 'classes') {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: 'javadoc') {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = "czmq-jni"
                description = 'The high-level C binding for 0MQ'
				packaging = 'jar'
                url = 'https://github.com/zeromq/czmq'
                licenses {
                    license {
                        name = 'Mozilla Public License Version 2.0'
                        url = 'https://www.mozilla.org/en-US/MPL/2.0/'
                    }
                }
                scm {
                    connection = 'https://github.com/zeromq/czmq.git'
                    developerConnection = 'https://github.com/zeromq/czmq.git'
                    url = 'https://github.com/zeromq/czmq'
                }
            }
        }
    }
}

artifactoryPublish {
    publications ('mavenJava')
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['mavenJava']
    publish = true
    override = true
    pkg {
        repo = "maven"
        name = "czmq-jni"
        desc = "The high-level C binding for 0MQ"
        userOrg = System.getenv('BINTRAY_USER_ORG')
        licenses = ["MPL-2.0"]
        websiteUrl = 'https://zeromq.org'
        issueTrackerUrl = 'https://github.com/zeromq/czmq/issues'
        vcsUrl = 'https://github.com/zeromq/czmq.git'
        githubRepo = System.getenv('BINTRAY_USER_ORG') + '/czmq'
        version {
            name = project.version
            vcsTag= project.version
        }
    }
}

//  ------------------------------------------------------------------
//  Cleanup section

clean.doFirst {
    delete "${rootDir}/CMakeCache.txt"
}
